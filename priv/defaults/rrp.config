%% -*- mode: erlang; erlang-indent-level: 4; indent-tabs-mode: nil -*-
%% -------------------------------------------------------------------
%%
%% Copyright (c) 2016-2017 Basho Technologies, Inc.
%%
%% This file is provided to you under the Apache License,
%% Version 2.0 (the "License"); you may not use this file
%% except in compliance with the License.  You may obtain
%% a copy of the License at
%%
%%   http://www.apache.org/licenses/LICENSE-2.0
%%
%% Unless required by applicable law or agreed to in writing,
%% software distributed under the License is distributed on an
%% "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
%% KIND, either express or implied.  See the License for the
%% specific language governing permissions and limitations
%% under the License.
%%
%% -------------------------------------------------------------------

%%
%% This is the default BRT configuration.
%% The local brt.config file, if present, is merged with these settings such
%% that local settings take precedence.
%%

%
% You almost certainly don't want to change this here - override it in the
% local brt.config file.
%
{default_repo_version,  {branch, "develop"}}.

%
% The `force' section allows inclusion of packages that would not be identified
% by xref or other means into the top-level project's dependencies.
% It is never applied recursively to the project's dependencies.
% This section should NEVER be populated in the defaults file, and should be a
% last resort anywhere else, though until some functionality is fully fleshed
% out it will be needed for the Riak umbrella package (which is why it's here).
%
{force, [
]}.

%
% The `rebar_config' section contains terms that are inserted into generated
% rebar.config files, replacing pre-existing values indiscriminately.
% This section should NEVER be populated in the defaults file!
%
{rebar_config, [
    %
    % Use `checkouts_dir' to override Rebar's default checkouts directory.
    % The primary use case for this is when operating on a pre-existing Rebar2
    % working tree where all dependencies are in the "deps" directory. In this
    % case the example setting below allows Rebar3 to work with the tree in a
    % fairly transparent manner.
    %
    % Unfortunately, this value can only be relative, not absolute, and is
    % joined to the root directory of the application currently being
    % processed, so things can get tricky with recursive operations.
    %
    % {checkouts_dir, "deps"}
]}.

%
% The `versions' section allows specification of a non-default version
% (branch/tag/commit) to use of the named package.
% Ignored if the package appears in the deps section.
%
{versions, [
    {basho_rebar_tools,     {branch, "master"}},
    {cuttlefish,            {branch, "develop"}},
    {rebar_raw_resource,    {branch, "master"}}
]}.

%
% The `repos' section allows specification of a non-default repository
% from which to obtain the named package.
% Each package is mapped to either an atom representing an alternate repository
% name (the first atom is an alias for the second) or a string containing a
% non-default repository URL.
% Ignored if the package appears in the `deps' section.
%
{repos, [
    % Aliases
    {hamcrest,              'hamcrest-erlang'},
    {pbkdf2,                'erlang-pbkdf2'},
    {protobuffs,            'erlang_protobuffs'},
    {rand_compat,           'erlang-rand-compat'},
    {riakc,                 'riak-erlang-client'},
    {riakhttpc,             'riak-erlang-http-client'},
    {syslog,                'erlang-syslog'},

    % Not (yet) forked
    {snappy,                "https://github.com/google/snappy.git"}
]}.

%
% The `deps' section allows overriding the entire dependency specification of
% a package, overriding defaults and entries for the package in the `repos'
% and/or `versions' sections.
% Raw resources, in particular, must be specified here.
%
{deps, [
]}.

%
% When an application depends on an element in this section, the associated
% options are added to the relevant rebar.config `erl_opts' list.
%
{dep_erl_opts, [
    {lager,                 [{parse_transform, lager_transform}]}
]}.

%
% When an application depends on a package in this section, the associated
% plugins are added to its rebar.config.
%
{dep_plugins, [
    {eleveldb,              [rebar_raw_resource]}
]}.

%
% Warning:
%   I don't like how this works and I'm likely to change it, but it's a low
%   priority for now.
%
% Dependencies in the `raw' section are wrapped in the `raw' resource type
% (unless they're specified in the `deps' section, which takes precedence)
% and the `rebar_raw_resource' provider is added to the including application's
% rebar.config plugins.
%
{raw, [
    leveldb,
    leveldb_ee,
    snappy
]}.

%
% Think very hard before changing any of the following ...
%
{default_repo_format,   "https://github.com/basho/~s.git"}.
{default_repo_type,     git}.
{nested_merge_sects,    [
    dep_erl_opts, dep_plugins, deps, repos, upstream, versions
]}.
{no_inherit,            [force]}.

%
% Locations of forked repositories and their branches that we track.
% Each application (package) can have multiple naming and action elements
% associated with it.
%
% Format:
%
%   {AppName, [Repo | Action]}
%
%   AppName :: atom()
%
%   Repo :: {Alias :: atom(), {Type :: atom(), URL :: string()}}
%
%   Action :: {Command :: atom(), Alias :: atom(), Args :: term()}
%
% Note that a Repo tuple always has exactly 2 elements, and an Action tuple
% always has exactly 3 elements. This distinction is used for pattern matching,
% and must not be violated without associated code changes.
%
% Alias is the common key that associates an Action with a Repo. In many cases,
% Alias will likely be 'upstream', but it could also be an owner name (or,
% actually, pretty much anything) for use when more than one upstream
% repository is tracked.
%
% Actions:
%
%   {mirror, Alias, Branch :: atom()}
%       Mirrors branch Branch from Alias's URL to Basho's AppName repo's
%       Alias-Branch branch.
%       Mirroring is performed by fetching both repos, then setting the HEAD
%       of local branch Alias-Branch to the HEAD commit of Alias/Branch.
%
% These *can* be overridden individually in the local brt.config, but it's
% questionable whether there's any legitimate use case for that.
%
{upstream, [
    {bear, [
        {upstream, {git, "https://github.com/folsom-project/bear.git"}},
        {mirror,    upstream,   master},
        {boundary, {git, "https://github.com/boundary/bear.git"}},
        {mirror,    boundary,   master}
    ]},
    {chronos, [
        {upstream, {git, "https://github.com/lehoff/chronos.git"}},
        {mirror, upstream, master}
    ]},
    {edown, [
        {upstream,  {git, "https://github.com/uwiger/edown.git"}},
        {mirror,    upstream,   master}
    ]},
    {eper, [
        {upstream,  {git, "https://github.com/massemanet/eper.git"}},
        {mirror,    upstream,   master}
    ]},
    {erlydtl, [
        {upstream,  {git, "https://github.com/erlydtl/erlydtl.git"}},
        {mirror,    upstream,   master}
    ]},
    {exometer_core, [
        {upstream,  {git, "https://github.com/Feuerlabs/exometer_core.git"}},
        {mirror,    upstream,   master}
    ]},
    {folsom, [
        {upstream, {git, "https://github.com/folsom-project/folsom.git"}},
        {mirror,    upstream,   master},
        {boundary, {git, "https://github.com/boundary/folsom.git"}},
        {mirror,    boundary,   master}
    ]},
    {fuse, [
        {upstream,  {git, "https://github.com/jlouis/fuse.git"}},
        {mirror,    upstream,   master}
    ]},
    {getopt, [
        {upstream,  {git, "https://github.com/jcomellas/getopt.git"}},
        {mirror,    upstream,   master}
    ]},
    {goldrush, [
        {upstream,  {git, "https://github.com/DeadZen/goldrush.git"}},
        {mirror,    upstream,   master},
        {mirror,    upstream,   develop}
    ]},
    {hamcrest, [
        {upstream,  {git, "https://github.com/hyperthunk/hamcrest-erlang.git"}},
        {mirror,    upstream,   master}
    ]},
    {hyper, [
        {upstream,  {git, "https://github.com/GameAnalytics/hyper.git"}},
        {mirror,    upstream,   master}
    ]},
    {ibrowse, [
        {upstream,  {git, "https://github.com/cmullaparthi/ibrowse.git"}},
        {mirror,    upstream,   master}
    ]},
    {kvc, [
        {upstream,  {git, "https://github.com/etrepum/kvc.git"}},
        {mirror,    upstream,   master}
    ]},
    {lager, [
        {upstream,  {git, "https://github.com/erlang-lager/lager.git"}},
        {mirror,    upstream,   master}
    ]},
    {leveldb, [
        {upstream,  {git, "https://github.com/google/leveldb.git"}},
        {mirror,    upstream,   master}
    ]},
    {meck, [
        {upstream,  {git, "https://github.com/eproxus/meck.git"}},
        {mirror,    upstream,   master}
    ]},
    {mochiweb, [
        {upstream,  {git, "https://github.com/mochi/mochiweb.git"}},
        {mirror,    upstream,   master}
    ]},
    {neotoma, [
        {upstream,  {git, "https://github.com/seancribbs/neotoma.git"}},
        {mirror,    upstream,   master}
    ]},
    {parse_trans, [
        {upstream,  {git, "https://github.com/uwiger/parse_trans.git"}},
        {mirror,    upstream,   master}
    ]},
    {pbkdf2, [
        {upstream,  {git, "https://github.com/whitelynx/erlang-pbkdf2.git"}},
        {mirror,    upstream,   master}
    ]},
    {poolboy, [
        {upstream,  {git, "https://github.com/devinus/poolboy.git"}},
        {mirror,    upstream,   master}
    ]},
    {proper, [
        {upstream,  {git, "https://github.com/manopapad/proper.git"}},
        {mirror,    upstream,   master}
    ]},
    {ranch, [
        {upstream,  {git, "https://github.com/ninenines/ranch.git"}},
        {mirror,    upstream,   master}
    ]},
    {rand_compat, [
        {upstream,  {git, "https://github.com/tuncer/erlang-rand-compat.git"}},
        {mirror,    upstream,   master}
    ]},
    {setup, [
        {upstream,  {git, "https://github.com/uwiger/setup.git"}},
        {mirror,    upstream,   master}
    ]},
    {sext, [
        {upstream,  {git, "https://github.com/uwiger/sext.git"}},
        {mirror,    upstream,   master}
    ]},
    {stdlib2, [
        {upstream,  {git, "https://github.com/cannedprimates/stdlib2.git"}},
        {mirror,    upstream,   master}
    ]},
    {syslog, [
        {upstream,  {git, "https://github.com/Vagabond/erlang-syslog.git"}},
        {mirror,    upstream,   master}
    ]},
    {webmachine, [
        {upstream,  {git, "https://github.com/webmachine/webmachine.git"}},
        {mirror,    upstream,   master}
    ]}
]}.
